pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID="411636737021"
        AWS_DEFAULT_REGION="us-east-1" 
    }
   
    stages {
        
         
        
        stage('Cloning Git') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/ArasanKavi/backend.git']]])     
            }
        }
    // Deleting Existing containers and images
    stage('Deleting image and container') {
      steps{
        script {
          sh "docker rm -f agro25"
          sh "docker rmi sample-nodejs-app"
        }
      }
    }
    
   // Building Docker images
    stage('Building image') {
      steps{
        script {
          sh "docker build -t sample-nodejs-app ."
        }
      }
    }
   
    // Uploading Docker images into AWS ECR
    
    stage('Run Container on Server Dev') {
	  steps{  
	      sh """
	      docker run -itd --name agro25 -p 2004:2122 sample-nodejs-app
	      """
      }
    }
  }
}
